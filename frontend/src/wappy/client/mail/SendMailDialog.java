package wappy.client.mail;import com.extjs.gxt.ui.client.Style.HorizontalAlignment;import com.extjs.gxt.ui.client.event.ButtonEvent;import com.extjs.gxt.ui.client.event.SelectionListener;import com.extjs.gxt.ui.client.widget.MessageBox;import com.extjs.gxt.ui.client.widget.button.Button;import com.extjs.gxt.ui.client.widget.form.FormPanel;import com.extjs.gxt.ui.client.widget.form.TextField;import com.extjs.gxt.ui.client.widget.form.NumberField;import com.extjs.gxt.ui.client.widget.Window;import com.extjs.gxt.ui.client.widget.form.SimpleComboBox;import com.google.gwt.user.client.ui.RichTextArea;import com.google.gwt.user.client.Command;import com.google.gwt.user.client.DeferredCommand;import com.google.gwt.json.client.JSONObject;import com.google.gwt.json.client.JSONString;import com.pathf.gwt.util.json.client.JSONWrapper;import wappy.client.SimpleJSON;public class SendMailDialog {    final Window window = new Window();    final FormPanel formPanel = new FormPanel();    final SimpleComboBox<String> accountField = new SimpleComboBox<String>();    final TextField<String> toField = new TextField<String>();    final TextField<String> subjectField = new TextField<String>();    final RichTextArea bodyField = new RichTextArea();    public SendMailDialog() {        window.setHeading("Send Mail");        window.setPlain(false);        window.setWidth(350);        window.setAutoHeight(true);        window.setResizable(true);		window.setModal(false);		window.setBlinkModal(false);		formPanel.setHeaderVisible(false);        formPanel.setButtonAlign(HorizontalAlignment.CENTER);        window.add(formPanel);        accountField.setFieldLabel("From");        accountField.setEmptyText("Select account to send mail from");        accountField.setAllowBlank(false);        accountField.setForceSelection(true);        formPanel.add(accountField);        loadAccountNames();		toField.setFieldLabel("To");		toField.setToolTip("Enter an e-mail address");		toField.setEmptyText("Enter an e-mail address");		toField.setAllowBlank(false);		formPanel.add(toField);		subjectField.setFieldLabel("Subject");		subjectField.setToolTip("Enter a subject");		subjectField.setEmptyText("Enter a subject");		subjectField.setAllowBlank(false);		formPanel.add(subjectField);        formPanel.add(bodyField);		formPanel.addButton(            new Button("Send", new SelectionListener<ButtonEvent>() {			public void componentSelected(ButtonEvent ce) {                sendMail();			}		}));		formPanel.addButton(            new Button("Cancel", new SelectionListener<ButtonEvent>() {			public void componentSelected(ButtonEvent ce) {				SendMailDialog.this.hide();			}		}));    }    public void show() {        window.show();        DeferredCommand.addCommand(new Command() {            public void execute() {                window.toFront();            }        });    }    public void hide() {        window.hide();    }    private void loadAccountNames() {        new SimpleJSON() {            public void onSuccess(JSONWrapper response) {                for (int i = 0; i < response.get("result").size(); i++) {                    accountField.add(                        response.get("result").get(i).stringValue());                }            }        }.query("/mail/accounts/list/", "");    }    public void sendMail() {        JSONObject params = new JSONObject();        params.put("from", new JSONString(accountField.getSimpleValue()));        params.put("to", new JSONString(toField.getValue()));        params.put("subject", new JSONString(subjectField.getValue()));        params.put("body", new JSONString(bodyField.getHTML()));        new SimpleJSON() {            public void onSuccess(JSONWrapper response) {                if (response.get("error").stringValue() == null) {                    MessageBox.alert("Success!",                                     "Message sent successfully!", null);                    SendMailDialog.this.hide();                }                else {                    onFailure();                }            }            public void onFailure() {                MessageBox.alert("Failure!",                                 "Could not deliver message!", null);            }        }.query("/mail/send/", params.toString());    }}